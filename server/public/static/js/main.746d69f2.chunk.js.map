{"version":3,"sources":["store.js","App.js","index.js"],"names":["initialState","Map","title","content","image","epicMiddleware","createEpicMiddleware","store","createStore","state","action","type","set","payload","applyMiddleware","run","action$","pipe","ofType","mergeMap","ajax","getJSON","map","response","style","card","maxWidth","media","height","App","className","Card","CardActionArea","CardMedia","src","this","props","alt","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","size","color","onClick","onClickLearn","Component","connect","get","dispatch","ReactDOM","render","document","getElementById"],"mappings":"0OAmBMA,EAAe,IAAIC,IAAI,CAC3BC,MAAO,iEACPC,QACE,04HACFC,MAAO,uBAeHC,EAAiBC,cACjBC,EAAQC,aAbE,WAAmC,IAAlCC,EAAiC,uDAAzBT,EAAcU,EAAW,uCAChD,OAAQA,EAAOC,MACb,IAAK,uBACH,OAAOF,EACJG,IAAI,QAASF,EAAOG,QAAQX,OAC5BU,IAAI,UAAWF,EAAOG,QAAQV,SAC9BS,IAAI,QAASF,EAAOG,QAAQT,OACjC,QACE,OAAOK,KAKsBT,EAAcc,YAAgBT,IAEjEA,EAAeU,KA7BO,SAACC,GAAD,OACpBA,EAAQC,KACNC,YAAO,cACPC,aAAS,SAACT,GAAD,OACPU,IAAKC,QAAL,UAAuBJ,KAAKK,aAAI,SAACC,GAAD,MANG,CAAEZ,KAAM,uBAAwBE,QAMFU,cA2BxDhB,Q,+GC/BTiB,EAAQ,CACZC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,MAGNC,E,4JACJ,WACE,OACE,sBAAKC,UAAU,aAAf,UACE,oBAAIA,UAAU,QAAd,mDACA,eAACC,EAAA,EAAD,CAAMD,UAAU,OAAON,MAAOA,EAAMC,KAApC,UACE,eAACO,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWT,MAAOA,EAAMG,MAAxB,SACE,qBAAKO,IAAKC,KAAKC,MAAMhC,MAAOiC,IAAKF,KAAKC,MAAMlC,UAE9C,eAACoC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACGP,KAAKC,MAAMlC,QAEd,cAACqC,EAAA,EAAD,CAAYG,UAAU,IAAtB,SAA2BP,KAAKC,MAAMjC,gBAG1C,eAACwC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,MAAM,UAA3B,mBAGA,cAACF,EAAA,EAAD,CAAQC,KAAK,QAAQC,MAAM,UAAUC,QAASZ,KAAKC,MAAMY,aAAzD,qC,GArBMC,aAyCHC,eAVS,SAACzC,GAAD,MAAY,CAClCP,MAAOO,EAAM0C,IAAI,SACjBhD,QAASM,EAAM0C,IAAI,WACnB/C,MAAOK,EAAM0C,IAAI,aAGQ,SAACC,GAAD,MAAe,CACxCJ,aAAc,kBAAMI,EAAS,CAAEzC,KAAM,mBAGxBuC,CAA6CrB,GCrD5DwB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAU/C,MAAOA,EAAjB,SACE,cAAC,EAAD,QAIJgD,SAASC,eAAe,W","file":"static/js/main.746d69f2.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { Map } from 'immutable';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { mergeMap } from 'rxjs/operators';\nimport { ofType } from 'redux-observable';\nimport { map } from 'rxjs/operators';\n// import { createLogger } from 'redux-logger';\nimport { ajax } from 'rxjs/ajax';\nimport 'rxjs';\n\nconst learnMoreFulfilled = (payload) => ({ type: 'LEARN MORE FULFILLED', payload });\n\nconst learnMoreEpic = (action$) =>\n  action$.pipe(\n    ofType('LEARN MORE'),\n    mergeMap((action) =>\n      ajax.getJSON(`/learn`).pipe(map((response) => learnMoreFulfilled(response)))\n    )\n  );\nconst initialState = new Map({\n  title: 'Сунь Укун, Monkey King',\n  content:\n    '- это герой ловкости, очень известный своей скользкой натурой, а также своей способностью обманывать его врагов превращаясь в деревья и другие объекты. Вооружившись своим магическим увеличивающимся посохом, Monkey King ударяет землю своими и прыгает по вершинам деревьев, чтобы избегать противников. Как герой роли Керри, Monkey King получает дополнительный урон и вампиризм после нанесения нескольких атак по своему противнику. Находясь на дереве, он получает лучший взор на его окрестности, позволяя ему спрыгивать на ничего не ожидающих врагов с  нанося существенный урон и замедляя их побег. В командном бою, Monkey King посылает небольшую армию клонов по всему полю битвы, в то время как он сам получает дополнительную броню. С помощью его клонов и команды, Monkey King это сила с которой нужно считаться.',\n  image: '/images/dota_1.png',\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LEARN MORE FULFILLED':\n      return state\n        .set('title', action.payload.title)\n        .set('content', action.payload.content)\n        .set('image', action.payload.image);\n    default:\n      return state;\n  }\n};\n\nconst epicMiddleware = createEpicMiddleware();\nconst store = createStore(reducer, initialState, applyMiddleware(epicMiddleware));\n\nepicMiddleware.run(learnMoreEpic);\n\nexport default store;\n","import { React, Component } from 'react';\n// import { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport './App.css';\n\nconst style = {\n  card: {\n    maxWidth: 545,\n  },\n  media: {\n    height: 340,\n  },\n};\nclass App extends Component {\n  render() {\n    return (\n      <div className='background'>\n        <h1 className='title'>Best Heroes of the International 2021</h1>\n        <Card className='card' style={style.card}>\n          <CardActionArea>\n            <CardMedia style={style.media}>\n              <img src={this.props.image} alt={this.props.title} />\n            </CardMedia>\n            <CardContent>\n              <Typography gutterBottom variant='h5' component='h2'>\n                {this.props.title}\n              </Typography>\n              <Typography component='p'>{this.props.content}</Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size='small' color='primary'>\n              Share\n            </Button>\n            <Button size='small' color='primary' onClick={this.props.onClickLearn}>\n              Learn More\n            </Button>\n          </CardActions>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  title: state.get('title'),\n  content: state.get('content'),\n  image: state.get('image'),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClickLearn: () => dispatch({ type: 'LEARN MORE' }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport App from './App';\n\nReactDOM.render(\n  <MuiThemeProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </MuiThemeProvider>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}